Advantages of Executor Service
- the job of managing threads is simplified
- the executorService implementations let us focused on tasks that need to be run, rather than thread creation and management.
- creating threads,destroying threads and creating them again can be expensive.
- a threadpool mitigates the cost, by keeping a set of threads around,in a pool, for current and future work.
- threads, once they complete one task,can they be reassigned to an other task, without the expense of destroying that thread and creating new one.
================
Java's Thread Pool Classes

Java has 5 variations of the Thread Pool
- FixedThreadPool: has a fixed number of threads.
- CachedThreadPool: creates new threads as needed,so its a variable size pool.
- ScheduledThreadPool: Can schedule tasks to run at a specific time or repeatedly at regular intervals.
- WorkStealing Pool: uses a work-stealing algorithm to distribute task amoung the threads in the pool
- ForkJoinPool: specialized workStealingPool for executing ForkJoinTasks n/a

